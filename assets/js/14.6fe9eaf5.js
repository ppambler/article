(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{565:function(v,_,t){"use strict";t.r(_);var e=t(12),s=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("blockquote",[t("p",[v._v("原文："),t("a",{attrs:{href:"https://www.imooc.com/article/291393",target:"_blank",rel:"noopener noreferrer"}},[v._v("怎么理清自己的编程思路_慕课手记"),t("OutboundLink")],1)])]),v._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),t("blockquote",[t("p",[v._v("如果大家在平常的开发之中，遇到过在面对一个功能需求的时候，不知道从何入手，从何开始的情况的话，那么本篇文章可能会对你有所帮助。")])]),v._v(" "),t("p",[v._v("编程思路是一个挺大的概念，如果想要完全掌握它，那么需要我们长期的积累，来把思路分析的方式变成一种本能。这是一个长期积累的过程，没有办法一撮而就。")]),v._v(" "),t("p",[v._v("而对于我们本篇文章来说，我们期望能够做到的是："),t("strong",[v._v("通过本篇文章中的思路模式，来帮助大家逐步培养自己的编程思路，直到把它变成真正自己的东西。")])]),v._v(" "),t("h2",{attrs:{id:"什么是编程思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是编程思路"}},[v._v("#")]),v._v(" 什么是编程思路")]),v._v(" "),t("p",[v._v("在文章开始之前，对于"),t("strong",[v._v("什么是编程思路")]),v._v("，我觉得还是需要进行一下介绍，以便大家都可以达成一个统一的认知。")]),v._v(" "),t("p",[v._v("那么什么是编程思路呢？我认为"),t("strong",[v._v("编程思路")]),v._v("其实表示的是两个概念，也就是 "),t("strong",[v._v("编程")]),v._v(" 和 "),t("strong",[v._v("思路")]),v._v(" 。")]),v._v(" "),t("p",[v._v("所以说，如果要解释什么是编程思路，那么我们就需要从这两个概念上去说。")]),v._v(" "),t("h3",{attrs:{id:"什么是编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是编程"}},[v._v("#")]),v._v(" 什么是编程")]),v._v(" "),t("p",[v._v("首先我们来看什么是编程。对于我们这些开发人员来说，我们的工作就是编程，也就是说我们每天工作的过程就是编程。")]),v._v(" "),t("p",[v._v("那么我们编程的目的是什么？或者说我们通过编程想要达到的结果是什么？")]),v._v(" "),t("p",[v._v("有些同学可能会说，我们编程就是想要赚钱，或者我们编程就是需要完成一个程序。这些都没错，但是却并不全面。我们编程的最终目的其实就是："),t("strong",[v._v("为了解决某个社会现有的问题。")])]),v._v(" "),t("p",[v._v("我们通过编程，制作出一个程序，希望可以解决某个社会中现有的问题。这就是我们编程的一个最终目的。")]),v._v(" "),t("p",[v._v("我们给编程一个定义，那就是：")]),v._v(" "),t("blockquote",[t("p",[v._v("为解决某个问题而使用某种程序设计语言编写程序代码。")])]),v._v(" "),t("h3",{attrs:{id:"什么是思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是思路"}},[v._v("#")]),v._v(" 什么是思路")]),v._v(" "),t("p",[v._v("了解了什么是编程之后，我们来看什么是思路。")]),v._v(" "),t("p",[v._v("我们知道编程其实就是："),t("strong",[v._v("为解决某个问题而使用某种程序设计语言编写程序代码。")]),v._v(" 那么对于程序来说，它就是由一个一个的功能点来组成的，我们去实现每一个功能点的时候，对于这个功能点，我们去实现的一个思路，那么就是"),t("strong",[v._v("编程的思路。")])]),v._v(" "),t("p",[v._v("那么把这两个概念组合到一起，我们来定义一下什么是编程思路。所谓编程思路就是：")]),v._v(" "),t("blockquote",[t("p",[v._v("为解决某个问题而使用某种程序设计语言编写程序代码，并最终得到相应结果的过程就是我们的编程思路。")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ppambler/blog-images/raw/master/fe/20211211015930.png",alt:"image-20211211015930125"}})]),v._v(" "),t("h2",{attrs:{id:"对于编程来说-是否有固定的思路模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对于编程来说-是否有固定的思路模式"}},[v._v("#")]),v._v(" 对于编程来说，是否有固定的思路模式？")]),v._v(" "),t("blockquote",[t("p",[v._v("PS:本事例以 Vue + Vue 全家桶为技术背景。")])]),v._v(" "),t("blockquote",[t("p",[v._v("对于大多数没有豪华学历背景的人而言，在刚刚踏入这个行业的时候（title：软件开发助理、初级软件开发工程师），面对的可能都是各种小厂，以及不专业的功能需求文档。那么当软助遭遇天坑需求，我们应该如何尽量避免悲剧呢？")])]),v._v(" "),t("p",[v._v("明确了编程思路的概念之后，那么对于编程来说，是否有一个固定的思路模式呢？也就是说，是否有一种固定的模式，我们按照这种模式来做，那么它就可以帮助我们来把我们的思路捋顺呢？我们先来看一个事例。")]),v._v(" "),t("blockquote",[t("p",[v._v("假如说，公司想要开发一个商城的系统，而对于这个商城的系统来说，它存在一个购物车的功能，这个购物车的功能就是我们需要开发的功能。")])]),v._v(" "),t("blockquote",[t("p",[v._v("而对于这个购物车的功能来说，我们现在只知道我们需要开发一个购物车，而对于该购物车它应该具备什么样的业务逻辑，我们一无所知。")])]),v._v(" "),t("p",[v._v("面对这样一个需求，对我们来说，确实糟透了。")]),v._v(" "),t("p",[v._v("那么面对这么一个工作，我们应该怎么去做呢？大家设身处地的想一下，如果大家在工作中，遇到了这么一个任务，我们应该如何去做？")]),v._v(" "),t("h2",{attrs:{id:"明确功能需求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#明确功能需求"}},[v._v("#")]),v._v(" 明确功能需求")]),v._v(" "),t("p",[v._v("首先对于任何一个功能来说，如果我们想要去实现它，那么我们必须要做的一点就是，我们必须要明确他的功能需求。")]),v._v(" "),t("p",[v._v("对于该购物车功能也一样，因为目前我们所知有限，如果我们想要把这个功能去实现，那么我们就必须要明确这个功能的详细需求。")]),v._v(" "),t("p",[v._v("而如果想要了解他的详细需求，那么最好的一个方式就是："),t("strong",[v._v("直接去找功能对应的产品经理去确认需求")]),v._v("。这是最简单，最方便也是最靠谱的一种需求确认方式，通过与产品经理的沟通，我们可以准确，快速的确认功能具体需求。而如果因为各种各样的原因，产品经理无法为我们提供准确的功能需求的话，那么我们怎么办呢？")]),v._v(" "),t("p",[v._v("那么在这个时候，我们所能够做的，就是："),t("strong",[v._v("结合项目的整体目的，通过市面上广为人知的类似项目的类似功能，来推断该功能的具体需求。")]),v._v(" 以商城系统的购物车为例，目前市面上有很多类似的项目，广为人知的项目也有很多，比如："),t("strong",[v._v("淘宝、京东、拼多多")]),v._v("等等。并且这些项目也都存在购物车的功能，通过了解这些项目的购物车功能，那么我们可以大致的推断出我们所需要开发的功能应该具备哪些能力。")]),v._v(" "),t("p",[v._v("如果市面上也不存在类似项目的话，那么我们唯一能做的就只能是凭借自己的理解和与同事的沟通来确定功能需求了。这样做也是最被逼无奈的一种方式。")]),v._v(" "),t("h2",{attrs:{id:"开始功能开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始功能开发"}},[v._v("#")]),v._v(" 开始功能开发")]),v._v(" "),t("div",{staticClass:"language-tex line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-tex"}},[t("code",[v._v("调研之后的购物车需求：\n\n1. 购物车以列表的形式展示已加入的商品，每个 item 中展示商品名称、价格、购买数量，标记选中状态的 check 按钮。\n2. 购物车底部展示处于选中状态下的商品总金额（商品价格*购买数量），未选中的不参与统计。\n3. 在商品详情中点击加入购物车按钮，商品加入购物车，同时页面跳转至购物车页面。\n4. 加入购物车时，如购物车中不存在本商品则购买数量为 1 。如已存在本商品，则在原数量上 +1 ，不展示新的商品 item 。\n5. 当商品 check 状态发生变化的时候，则统计总金额数据，应实时变化。\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br")])]),t("p",[v._v("在明确了功能需求之后，接下来我们需要做的就是对功能进行开发。在进行功能开发的时候，最大的变数就是工程师本身对于技术的掌握能力了，一个高软和一个软助因为本身对技术的掌握能力不同，那么他们在同时进行软件开发的时候，所走的路，所趟的坑也都完全不同。")]),v._v(" "),t("p",[v._v("那么假如我们刚刚踏入软件行业，仅掌握基础的技术能力，对所使用框架仅了解基础用法，对核心"),t("code",[v._v("API")]),v._v("也没有完全掌握，并且没有成型项目的开发经验的话，那么在面对这么一个购物车功能和自调研需求的“杯具”情况下，我们应该如何去着手开发呢？")]),v._v(" "),t("p",[v._v("对于这么一种情况，那么我们很有可能就会处于一种不知如何下手的状态，如果我们真的面对这么一种状态的话，那么我们所需要做的第一件事就是尽快突破这种状态，也就是 “"),t("strong",[v._v("写下第一行代码")]),v._v("” 。")]),v._v(" "),t("h2",{attrs:{id:"写下第一行代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写下第一行代码"}},[v._v("#")]),v._v(" 写下第一行代码")]),v._v(" "),t("blockquote",[t("p",[v._v("很多同学可能会说：我就是因为不知道怎么去写，所以才不知道如何下手，你让我写下第一行代码，我怎么去写啊。")])]),v._v(" "),t("p",[v._v("如果面对不知如何下手这么一种情况的话，那么大家可以尝试使用“倒推”的方式对需求进行解体。")]),v._v(" "),t("blockquote",[t("p",[v._v("倒推：以完成之后的功能为起点，对该功能进行逐步拆解，从而分析出对于该功能应该如何实现。")])]),v._v(" "),t("p",[v._v("如何进行“倒推”呢？我们以梳理出来的需求为例，看一下如何去进行“倒推”。")]),v._v(" "),t("p",[v._v("需求：")]),v._v(" "),t("blockquote",[t("p",[v._v("购物车以列表的形式展示已加入的商品，每个 item 中展示商品名称、价格、购买数量，标记选中状态的 check 按钮。")])]),v._v(" "),t("p",[v._v("倒推流程：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("根据你在前面的分析或者现有的设计图，得到购物车页面完成之后的样式。假设样式如下：")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/ppambler/blog-images/raw/master/fe/5d47df9a0001925806040992.png",alt:"图片描述"}})])]),v._v(" "),t("li",[t("p",[v._v("对完成之后的 "),t("strong",[v._v("样式")]),v._v(" 进行拆解。比如既然为购物车页面，那么它必然存在一个购物车的页面组件"),t("code",[v._v("shopping.vue")]),v._v("。")])]),v._v(" "),t("li",[t("p",[v._v("在该页面之中，它存在着多个商品的 "),t("code",[v._v("item")]),v._v(" ，这些商品的 "),t("code",[v._v("item")]),v._v(" 重复循环展示，并且拥有自己的业务逻辑（"),t("code",[v._v("check")]),v._v("选择、数量变化）。那么我们是不是还需要拥有一个表示商品 "),t("code",[v._v("item")]),v._v(" 的组件"),t("code",[v._v("GoodsItem.vue")]),v._v("，并且在 "),t("code",[v._v("shopping.vue")]),v._v(" 中通过 "),t("code",[v._v("v-for")]),v._v(" 的方式，来把它循环展示。")])])]),v._v(" "),t("p",[v._v("这就是我们对第一个功能进行的倒推，那么根据我们刚才的倒推分析，我们应该如何去写第一行代码呢？")]),v._v(" "),t("ol",[t("li",[v._v("首先我们需要创建两个"),t("code",[v._v("vue")]),v._v("的组件，分别用来表示 购物车页面 和 商品"),t("code",[v._v("item")]),v._v("。")]),v._v(" "),t("li",[v._v("然后对于购物车页面来说我们就需要完成它的基础"),t("code",[v._v("UI")]),v._v("布局，并且使用"),t("code",[v._v("v-for")]),v._v("的方式，根据购物车商品数据来循环展示商品"),t("code",[v._v("item")]),v._v("组件。")])]),v._v(" "),t("p",[v._v("通过这样一种方式，我们就可以完成我们的第一行代码编写。也就跳出了不知如何下手的一个状态了。")]),v._v(" "),t("h2",{attrs:{id:"整理复杂业务逻辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整理复杂业务逻辑"}},[v._v("#")]),v._v(" 整理复杂业务逻辑")]),v._v(" "),t("p",[v._v("如果说在 "),t("strong",[v._v("“写下第一行代码”")]),v._v(" 中它能够帮助到你的话，那么你应该可以很快的根据 "),t("strong",[v._v("“倒推”")]),v._v(" 的方式来梳理出剩余的需求，并且至少可以完成剩余需求的大部分基础代码。")]),v._v(" "),t("p",[v._v("那么在完成了大部分的基础代码之后，紧接着大家可能遇到的问题就是对于项目中 "),t("strong",[v._v("复杂业务逻辑")]),v._v(" 的处理了。")]),v._v(" "),t("p",[v._v("我们还是以在上面整理出来的需求为例，来看一下，当我们在面对项目中 "),t("strong",[v._v("复杂业务逻辑")]),v._v(" 的时候，我们应该如何来梳理我们的编程思路。")]),v._v(" "),t("p",[v._v("明确目前代码：")]),v._v(" "),t("blockquote",[t("p",[v._v("购物车页面组件 "),t("code",[v._v("shopping.vue")]),v._v(" ，页面中通过 "),t("code",[v._v("v-for")]),v._v(" 循环展示商品"),t("code",[v._v("item")]),v._v(" 组件。")])]),v._v(" "),t("p",[v._v("需求：")]),v._v(" "),t("blockquote",[t("p",[v._v("购物车底部展示处于选中状态下的商品总金额（商品价格*购买数量），未选中的不参与统计。")])]),v._v(" "),t("blockquote",[t("p",[v._v("当商品 check 状态发生变化的时候，则统计总金额数据，应实时变化。")])]),v._v(" "),t("p",[v._v("对于 "),t("strong",[v._v("“复杂的业务逻辑”")]),v._v(" 来说，我们依然可以采用 "),t("strong",[v._v("“倒推”")]),v._v(" 的方式进行处理。同样我们依然先明确项目最终的展示效果。")]),v._v(" "),t("p",[t("img",{attrs:{src:"https://ppambler.github.io/cml/assets/img/20211211014019%20-1.gif",alt:"20211211014019"}})]),v._v(" "),t("p",[v._v("这就是我们最终项目的一个展示效果。我们通过 "),t("strong",[v._v("“倒推”")]),v._v(" 的方式来把这两个需求进行一个分析。")]),v._v(" "),t("ol",[t("li",[v._v("首先根据我们目前的代码，我们已经把 "),t("code",[v._v("shopping.vue")]),v._v(" 和 "),t("code",[v._v("GoodsItem.vue")]),v._v(" 分成了两个组件。")]),v._v(" "),t("li",[v._v("当 "),t("code",[v._v("GoodsItem.vue")]),v._v(" 中的 "),t("code",[v._v("check")]),v._v(" 状态发生变化的时候，"),t("code",[v._v("shopping.vue")]),v._v(" 中的统计总金额也会跟随发生变化，所以我们需要在 "),t("code",[v._v("GoodsItem.vue")]),v._v(" 中去监听 "),t("code",[v._v("check")]),v._v(" 的变化事件，当 "),t("code",[v._v("check")]),v._v(" 的状态发生变化的时候，需要通过 "),t("code",[v._v("$emit")]),v._v(" 通知到它的父组件也就是 "),t("code",[v._v("shopping.vue")]),v._v("。")]),v._v(" "),t("li",[v._v("只有处于选中状态下的商品才会参与统计，所以我们在"),t("code",[v._v("GoodsItem.vue")]),v._v("的组件中通过 "),t("code",[v._v("$emit")]),v._v(" 通知父组件的时候需要传递当前的 "),t("code",[v._v("check")]),v._v(" 状态。")]),v._v(" "),t("li",[v._v("而对于需求中的父组件也就是 "),t("code",[v._v("shopping.vue")]),v._v(" 来说，它在监听到了 "),t("code",[v._v("GoodsItem")]),v._v(" 给过来的通知之后，所需要做的就是根据携带的 "),t("code",[v._v("check")]),v._v(" 状态来进行对应的计算了。")])]),v._v(" "),t("p",[v._v("通过这样的一个 "),t("strong",[v._v("“倒推”")]),v._v(" 逻辑，我们就可以大体的把需求的基本实现思路给整理清楚了。")]),v._v(" "),t("h2",{attrs:{id:"功能实现中遇到不会的知识点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能实现中遇到不会的知识点"}},[v._v("#")]),v._v(" 功能实现中遇到不会的知识点")]),v._v(" "),t("p",[v._v("通过 "),t("strong",[v._v("写下第一行代码")]),v._v(" 和 "),t("strong",[v._v("整理复杂业务逻辑")]),v._v(" 这两节，相信大家已经可以初步的处理一个功能的实现了。")]),v._v(" "),t("p",[v._v("但是在功能实现的过程中，却很有可能会遇到各种我们不了解的 "),t("code",[v._v("API")]),v._v(" 或者 "),t("strong",[v._v("知识点")]),v._v("，这些不了解就很有可能会扰乱我们已经整理好的思路，并且如果一直没有解决方案的话，甚至可能会导致我们对之前的思路产生怀疑"),t("code",[v._v("（PS: 之前是不是想错了）")]),v._v("。")]),v._v(" "),t("p",[v._v("最终导致我们最后的实现并没有按照我们的思路来走，而写出逻辑混乱的代码，严重的甚至会让我们把之前的思路全部推倒重来。")]),v._v(" "),t("p",[v._v("那么当我们在功能实现中遇到不了解的"),t("code",[v._v("API")]),v._v(" 和不会的知识点的时候，我们应该怎么去做呢？")]),v._v(" "),t("h3",{attrs:{id:"当我们遇到不了解的api时"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#当我们遇到不了解的api时"}},[v._v("#")]),v._v(" 当我们遇到不了解的"),t("code",[v._v("API")]),v._v("时")]),v._v(" "),t("p",[v._v("当我们遇到不了解的"),t("code",[v._v("API")]),v._v("时（比如我们不知道 "),t("code",[v._v("split")]),v._v(" 怎么使用，或者我们不知道如何把"),t("strong",[v._v("字符串分割成数组")]),v._v("），其实这只是一些小的问题，至少它并不会影响我们的整体思路。而解决的办法也有很多我们可以直接去 "),t("code",[v._v("Google")]),v._v(" 、"),t("strong",[v._v("百度")]),v._v(" 或者直接去查他们的 "),t("code",[v._v("API")]),v._v(" 文档，这些方式都可以帮助我们很快的去解决对 "),t("code",[v._v("API")]),v._v(" 不了解的问题。")]),v._v(" "),t("h3",{attrs:{id:"当我们遇到不会的知识点时"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#当我们遇到不会的知识点时"}},[v._v("#")]),v._v(" 当我们遇到不会的知识点时")]),v._v(" "),t("p",[v._v("而当我们遇到不会的知识点时（比如我们不知道如何在 "),t("code",[v._v("vue")]),v._v(" 中去进行组件之间的通讯、过渡动画、状态保存等等），这样的一整个的知识点的时候，才会有一点麻烦。")]),v._v(" "),t("p",[v._v("那么当我们遇到不会的知识点时，我们应该如何处理呢？我们把基本的处理方式给大家列举一下（因为对于知识点来说，太多太杂，如果通过单一事例可能会比较片面没有办法带来好的效果）。")]),v._v(" "),t("ol",[t("li",[v._v("如果可以描述清楚知识点内容的话，那么可以通过搜索引擎或者技术论坛进行搜索。")]),v._v(" "),t("li",[v._v("如果无法描述知识点内容的话，那么同样可以采取 "),t("strong",[v._v("“倒推 + 拆解”")]),v._v(" 的方式来处理。通过对一个完整的知识点拆解的方式，来把一个完整知识点拆解为多个具体步骤，然后分别在执行这里的 1、2 操作。（比如组件通讯可以拆解为：1、子组件如何通知父组件。2、父组件如何接收子组件发送的通知）")])]),v._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),t("p",[v._v("最后我们回到最初的议题："),t("strong",[v._v("对于编程来说，是否有固定的思路模式？")]),v._v(" 经过我们本章的内容，大家想一下，这个固定的思路模式是否存在呢？")]),v._v(" "),t("p",[v._v("答案是存在的。整理出的具体思路模式如下：")]),v._v(" "),t("ol",[t("li",[v._v("明确功能需求。无论是通过与产品经理沟通还是去做自调研，"),t("strong",[v._v("明确功能需求")]),v._v(" 都是我们进行开发变成的第一步。")]),v._v(" "),t("li",[v._v("开始功能开发。明确了功能需求之后，我们就需要去开始功能开发。")]),v._v(" "),t("li",[v._v("如果我们在功能开发的时候，不知道如何去入手，那么我们就需要尽快突破这种状态，也就是**“写下第一行代码”**。")]),v._v(" "),t("li",[v._v("在 "),t("strong",[v._v("“写下第一行代码”")]),v._v(" 的时候，如果不知道如何写，那么可以通过 "),t("strong",[v._v("倒推")]),v._v(" 和 "),t("strong",[v._v("“拆解”")]),v._v(" 的方式，来帮助我们梳理思路。")]),v._v(" "),t("li",[v._v("在当我们遇到复杂业务需求的时候， "),t("strong",[v._v("倒推")]),v._v(" 和 "),t("strong",[v._v("“拆解”")]),v._v(" 的方式依然可以帮助到我们。")]),v._v(" "),t("li",[v._v("而当我们按照思路编写程序的时候，如果遇到不会的知识点，不要着急否定思路，先去尝试看看有没有解决的办法。比如可以通过搜索引擎，或者对复杂知识点进行 "),t("strong",[v._v("倒推")]),v._v(" 和 "),t("strong",[v._v("“拆解”")]),v._v(" 的方式来解决。")])]),v._v(" "),t("p",[v._v("希望上面的这六个步骤可以对大家有所帮助。")]),v._v(" "),t("hr"),v._v(" "),t("p",[v._v("一个评论：")]),v._v(" "),t("blockquote",[t("p",[v._v("已经追完 sunday 老师目前更新的"),t("a",{attrs:{href:"https://coding.imooc.com/class/377.html?mc_marking=45dd79e263a010161b8a2efbc3803990&mc_channel=shouji",target:"_blank",rel:"noopener noreferrer"}},[v._v("课程"),t("OutboundLink")],1),v._v("了。收获非常大，非常喜欢 sunday 老师的讲课方式，所有代码都有详细的注释，并且对于问题分析的思路都非常清晰，对于功能实现，遇到什么问题，怎么思考，怎么解决，为什么要这么解决 ，都会把思路 1、2、3、4、5 罗列出来，获益匪浅，大爱 ！")])]),v._v(" "),t("p",[v._v("对于他的这个评论，我表示非常赞同！因为我目前就是在看 Sunday 老师的另外一个课程：「"),t("a",{attrs:{href:"https://coding.imooc.com/class/chapter/521.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("uni-app 开发企业级小程序"),t("OutboundLink")],1),v._v("」")])])}),[],!1,null,null,null);_.default=s.exports}}]);